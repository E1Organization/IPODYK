import asyncio
from bot import bot
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command

from aiogram.utils.markdown import hbold
from database import Database as db
from price_tracker import PriceTracker as pt

router = Router()


@router.message(Command("start"))
async def start_command(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ü–µ–Ω—ã –Ω–∞ —Ç–æ–≤–∞—Ä—ã.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/add \'—Å—Å—ã–ª–∫a\' ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä\n"
        "/list ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã\n"
        "/remove \'ID\' ‚Äî —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä"
    )

@router.message(Command("add"))
async def add_product(message: Message):
    args = message.text.split(maxsplit=1)
    if len(args) < 2:
        await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ /add \'—Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä\'")
        return
    url = args[1]
    product_id = await db.add_product(url, message.from_user.id)
    if product_id:
        await message.reply(f"‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è. ID: {hbold(product_id)}")
    else:
        await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Å—ã–ª–∫—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


@router.message(Command("list"))
async def list_products(message: Message):
    products = await db.get_user_products(message.from_user.id)
    if not products:
        await message.reply("üìã –í–∞—à —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç.")
    else:
        response = "üìã –í–∞—à–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã:\n"
        for p in products:
            response += f"ID: {hbold(p['id'])}, URL: {p['url']}, –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {hbold(p['price'])} ‚ÇΩ\n"
        await message.reply(response)


@router.message(Command("remove"))
async def remove_product(message: Message):
    args = message.text.split(maxsplit=1)
    if len(args) < 2:
        await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ /remove \'ID —Ç–æ–≤–∞—Ä–∞\'")
        return
    product_id = int(args[1])
    if await db.remove_product(product_id, message.chat.id):
        await message.reply(f"‚úÖ –¢–æ–≤–∞—Ä —Å ID {hbold(product_id)} —É–¥–∞–ª–µ–Ω –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.")
    else:
        await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ ID –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


async def notify_price_changes():
    while True:
        changes = await pt.check_prices()
        for change in changes:
            user_id = change['user_id']
            message = (
                f"‚ö†Ô∏è –¶–µ–Ω–∞ –Ω–∞ —Ç–æ–≤–∞—Ä –∏–∑–º–µ–Ω–∏–ª–∞—Å—å!\n"
                f"{hbold('–¢–æ–≤–∞—Ä')}: {change['url']}\n"
                f"–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: {hbold(change['old_price'])} ‚ÇΩ, –ù–æ–≤–∞—è —Ü–µ–Ω–∞: {hbold(change['new_price'])} ‚ÇΩ\n"
                f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ: {hbold(change['change_percent'])}%"
            )
            await bot.send_message(user_id, message)
        await asyncio.sleep(10)  # –ü—Ä–æ–≤–µ—Ä—è—Ç—å –∫–∞–∂–¥—ã–µ 60 –º–∏–Ω—É—Ç